[{"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\index.js":"1","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\App.js":"2","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\auth\\auth0-provider-with-history.js":"3","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\utilities\\userContext.js":"4","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\employeePage\\employeePage.js":"5","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\memberPage\\memberPage.js":"6","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\registrationPage\\registrationPage.js":"7","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\memberStore\\memberStore.js":"8","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\loginPage\\loginPage.js":"9","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\managerPage\\managerPage.js":"10","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\Forms\\RegistrationForm.js":"11","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\loginPageComponents\\AdCarousel.js":"12","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\userInfoBox\\userInfoBox.js":"13","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\footer\\footer.js":"14","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\header\\header.js":"15","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\devButton\\devButton.js":"16","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\employeePageComponents\\employeeSchedule\\employeeSchedule.js":"17","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\memberPageComponents\\meetYourTrainerBox\\TrainerCarousel.js":"18","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\memberPageComponents\\memberInfoBox\\memberInfoBox.js":"19","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\authenticationButton\\index.js":"20","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\utilities\\convertTime.js":"21","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\scheduleColumn\\scheduleColumn.js":"22","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\authenticationButton\\loginButton\\loginButton.js":"23","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\authenticationButton\\logoutButton\\logoutButton.js":"24","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\StoreComponent.js":"25","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\employeePageComponents\\employeeInfoBoxColumns\\eInfoBoxRightColumn.js":"26","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\employeePageComponents\\employeeInfoBoxColumns\\einfoBoxLeftColumn.js":"27","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\managerComponents\\managerSchedule\\managerSchedule.js":"28","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\managerComponents\\managerInfoBoxColumns\\mInfoBoxRightCol.js":"29","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\managerComponents\\managerInfoBoxColumns\\mInfoBoxLeftCol.js":"30"},{"size":393,"mtime":1615405787087,"results":"31","hashOfConfig":"32"},{"size":2860,"mtime":1615600036509,"results":"33","hashOfConfig":"32"},{"size":822,"mtime":1615600036576,"results":"34","hashOfConfig":"32"},{"size":256,"mtime":1615235191125,"results":"35","hashOfConfig":"32"},{"size":5312,"mtime":1615600036582,"results":"36","hashOfConfig":"32"},{"size":792,"mtime":1615600036583,"results":"37","hashOfConfig":"32"},{"size":2145,"mtime":1615600036586,"results":"38","hashOfConfig":"32"},{"size":3425,"mtime":1615602346552,"results":"39","hashOfConfig":"32"},{"size":4752,"mtime":1615600036583,"results":"40","hashOfConfig":"32"},{"size":7071,"mtime":1615507532941,"results":"41","hashOfConfig":"32"},{"size":3345,"mtime":1615600036577,"results":"42","hashOfConfig":"32"},{"size":1044,"mtime":1615405787082,"results":"43","hashOfConfig":"32"},{"size":653,"mtime":1615507532931,"results":"44","hashOfConfig":"32"},{"size":333,"mtime":1615405787073,"results":"45","hashOfConfig":"32"},{"size":1018,"mtime":1615507330914,"results":"46","hashOfConfig":"32"},{"size":649,"mtime":1615405787072,"results":"47","hashOfConfig":"32"},{"size":3124,"mtime":1615507532935,"results":"48","hashOfConfig":"32"},{"size":1856,"mtime":1615507330929,"results":"49","hashOfConfig":"32"},{"size":920,"mtime":1615600036580,"results":"50","hashOfConfig":"32"},{"size":384,"mtime":1615169570939,"results":"51","hashOfConfig":"32"},{"size":861,"mtime":1615600036587,"results":"52","hashOfConfig":"32"},{"size":487,"mtime":1615405787077,"results":"53","hashOfConfig":"32"},{"size":387,"mtime":1615405787071,"results":"54","hashOfConfig":"32"},{"size":460,"mtime":1615169570941,"results":"55","hashOfConfig":"32"},{"size":2301,"mtime":1615629435468,"results":"56","hashOfConfig":"32"},{"size":4442,"mtime":1615600036579,"results":"57","hashOfConfig":"32"},{"size":1675,"mtime":1615507532933,"results":"58","hashOfConfig":"32"},{"size":2107,"mtime":1615507532939,"results":"59","hashOfConfig":"32"},{"size":4682,"mtime":1615507532937,"results":"60","hashOfConfig":"32"},{"size":970,"mtime":1615507532936,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"6e6jga",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\index.js",[],["132","133"],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\App.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\auth\\auth0-provider-with-history.js",["134","135"],"// Auth0 Custom hook to handle user login\r\n\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nconst Auth0ProviderWithHistory = ({ children }) => {\r\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n\r\n  const history = useHistory();\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain=\"dev-dustin-erwin.us.auth0.com\"\r\n      clientId=\"k2k2ChfEp9RI1RsDXe0gu6e6tnQZVghd\"\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;\r\n","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\utilities\\userContext.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\employeePage\\employeePage.js",["136","137"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"../../components/commonComponents/header/header\";\r\nimport Footer from \"../../components/commonComponents/footer/footer\";\r\nimport EmployeeSchedule from \"../../components/employeePageComponents/employeeSchedule/employeeSchedule\";\r\nimport UserInfoBox from \"../../components/commonComponents/userInfoBox/userInfoBox\";\r\nimport UserContext from \"../../utilities/userContext\";\r\nimport RightColumn from \"../../components/employeePageComponents/employeeInfoBoxColumns/eInfoBoxRightColumn\";\r\nimport LeftColumn from \"../../components/employeePageComponents/employeeInfoBoxColumns/einfoBoxLeftColumn\";\r\nimport add from \"date-fns/add\";\r\nimport { format } from \"date-fns\";\r\n\r\n/*ToDO: \r\n \r\n4. Style Right Column Roster \r\n*/\r\n\r\nfunction EmployeePage() {\r\n  const user = useContext(UserContext);\r\n  const [userData, setUserData] = useState(\"\"); //The uesr name and id\r\n  const [userClasses, setUserClasses] = useState([]); //The classes the trainer is teaching in the left column info box\r\n  const [classRoster, setClassRoster] = useState(\"\"); //holds which members are in a particular class\r\n  const [rightColDisplay, setRightColDisplay] = useState(\"addClass\"); // a toggle that switches between roster and add/class\r\n  const [classSchedule, setClassSchedule] = useState([]); //all info for each class rendered in schedule\r\n  const weekLength = [0, 1, 2, 3, 4, 5, 6];\r\n\r\n  //update all dynamic info on the page once user info is grabbed from context\r\n  useEffect(() => {\r\n    fetchScheduleData();\r\n    fetchTrainerData();\r\n  }, [user._id]);\r\n\r\n  //fetches all the information needed to render a schedule and stores it in state.\r\n  function fetchScheduleData() {\r\n    fetch(\"/api/employee/\" + user._id + \"/classes\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const stateArray = [];\r\n        weekLength.map((nothing, i) => {\r\n          //Use date-fns to get classSchedule for the 7 days of the week\r\n          const addDay = add(new Date(), {\r\n            years: 0,\r\n            months: 0,\r\n            weeks: 0,\r\n            days: i,\r\n            hours: 0,\r\n            minutes: 0,\r\n            seconds: 0,\r\n          });\r\n\r\n          //the date written as Jan 23rd\r\n          const calendarDate = format(addDay, \"LLL, do\");\r\n          //day of week written as \"Monday\"\r\n          const dayOfWeek = format(addDay, \"EEEE\");\r\n\r\n          //Filter the fetch request to only grab classes on the current day weeklength.map is iterating through\r\n          const filteredData = res.filter((r) => {\r\n            return r.day === dayOfWeek;\r\n          });\r\n\r\n          //create an object to store both the fns date classSchedule and the current day\r\n          const dataObject = {\r\n            date: calendarDate,\r\n            weekDay: dayOfWeek,\r\n            classData: filteredData,\r\n          };\r\n\r\n          //add that object to state\r\n          stateArray.push(dataObject);\r\n        });\r\n\r\n        setClassSchedule(stateArray);\r\n      });\r\n  }\r\n\r\n  //grabs userName and class schedule to populate schedule\r\n  function fetchTrainerData() {\r\n    fetch(\"/api/employee/\" + user._id + \"/schedule\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const classesTaught = res.length;\r\n\r\n        const classesArray = [...res];\r\n        setUserClasses(classesArray);\r\n\r\n        setUserData({\r\n          firstName: user.firstName,\r\n          numClassesTaught: classesTaught,\r\n        });\r\n      });\r\n  }\r\n\r\n  function updateRoster(e) {\r\n    const classId = e.target.id;\r\n    fetch(`/api/class/${classId}/roster`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const roster = res.shift();\r\n        setClassRoster([roster]);\r\n        setRightColDisplay(\"roster\");\r\n      });\r\n  }\r\n\r\n  //updates right column to display the addClass form\r\n  function toggleAddClass() {\r\n    setRightColDisplay(\"addClass\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <UserInfoBox\r\n        colLeft={\r\n          <LeftColumn\r\n            firstName={user.firstName}\r\n            numClassesTaught={userData.numClassesTaught}\r\n            userClasses={userClasses}\r\n            updateRoster={updateRoster}\r\n            toggleAddClass={toggleAddClass}\r\n          />\r\n        }\r\n        colRight={\r\n          <RightColumn\r\n            rosterList={classRoster || []}\r\n            displayAddClass={rightColDisplay}\r\n            trainerId={user._id}\r\n            fetchScheduleData={() => fetchScheduleData()}\r\n            fetchTrainerData={() => fetchTrainerData()}\r\n          />\r\n        }\r\n      ></UserInfoBox>\r\n      <EmployeeSchedule\r\n        userData={userData}\r\n        classSchedule={classSchedule}\r\n        fetchScheduleData={() => fetchScheduleData()}\r\n        fetchTrainerData={() => fetchTrainerData()}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\memberPage\\memberPage.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\registrationPage\\registrationPage.js",["138"],"import React, { useState, useContext } from \"react\";\r\nimport Header from \"../../components/commonComponents/header/header\";\r\nimport Footer from \"../../components/commonComponents/footer/footer\";\r\nimport RegistrationForm from \"../../components/Forms/RegistrationForm\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./registrationPage.css\";\r\nimport DevBtn from \"../../components/commonComponents/devButton/devButton\";\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport userContext from \"../../utilities/userContext\";\r\n\r\nfunction RegistrationPage() {\r\n  const contextUser = useContext(userContext);\r\n  const [users, setUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    gender: \"\",\r\n    date_of_birth: \"\",\r\n    phone: \"\",\r\n    role: \"member\",\r\n    email: contextUser.email,\r\n  });\r\n\r\n  const userInfo = (event) => {\r\n    const { name, value } = event.target;\r\n    setUser({\r\n      ...users,\r\n      [name]: value,\r\n    });\r\n  };\r\n  // console.log(users);\r\n\r\n  const handleRegistrationSubmit = (event) => {\r\n    fetch(\"/api/register\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(users),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((users) => {\r\n        console.log(\"Success:\", users);\r\n        window.location.href = window.location.origin;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"regPage\">\r\n        <h1>You're almost there! </h1>\r\n        <h3>Enter your information to become a member!</h3>\r\n        <Card>\r\n          <RegistrationForm\r\n            userInfo={(e) => userInfo(e)}\r\n            user={users}\r\n          ></RegistrationForm>\r\n        </Card>\r\n        <DevBtn\r\n          className=\"signupBtn\"\r\n          styleClass=\"btn-red\"\r\n          onClick={handleRegistrationSubmit}\r\n        >\r\n          Sign Up\r\n        </DevBtn>\r\n      </Container>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegistrationPage;\r\n","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\memberStore\\memberStore.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\loginPage\\loginPage.js",["139","140","141","142","143"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Header from \"../../components/commonComponents/header/header\";\r\nimport Footer from \"../../components/commonComponents/footer/footer\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport AdCarousel from \"../../components/loginPageComponents/AdCarousel\";\r\nimport AuthenticationButton from \"../../components/authenticationButton\";\r\nimport \"./styles.css\";\r\nimport girlFeet from \"../../assets/images/girlfeetwaterbottle.jpg\";\r\nimport gymCoronavirus from \"../../assets/images/gym-coronavirus.jpg\";\r\nimport bench from \"../../assets/images/bench.jpg\";\r\nimport equipmentRoom from \"../../assets/images/equipmentroom.jpg\";\r\nimport DevBtn from \"../../components/commonComponents/devButton/devButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"loginPage\">\r\n        <Row>\r\n          <Col className=\"align-self-stretch background-dark\">\r\n            <Container className=\"my-5 py-3\">\r\n              <Container className=\"text-center\">\r\n                <h1 className=\"text-red\">Refactor your body!</h1>\r\n                <AdCarousel\r\n                  className=\"adCarousel\"\r\n                  //Image Credit:  https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.firstpost.com%2Fhealth%2Fcovid-19-precautions-should-you-be-heading-back-to-your-gym-now-that-it-will-be-allowed-to-reopen-8661361.html&psig=AOvVaw0u3LCRxcuz5rHgFpSVFb_Q&ust=1609792245944000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJC0mczNgO4CFQAAAAAdAAAAABAO\r\n                  imgUrl1={girlFeet}\r\n                  altText1=\"Girl sitting on floor next to water bottle\"\r\n                  carouselHeader1=\"Stretching your mind\"\r\n                  carouselCaption1=\"but need to stretch your body?\"\r\n                  // Image credit:  https://time.com/5795492/gym-fitness-studio-coronavirus/\r\n                  imgUrl2={gymCoronavirus}\r\n                  altText2=\"Man picking up weight from weight rack\"\r\n                  carouselHeader2=\"Found your inner strength\"\r\n                  carouselCaption2=\"but still discovering your outer\r\n              strength?\"\r\n                />\r\n              </Container>\r\n            </Container>\r\n          </Col>\r\n          <Col className=\"align-self-stretch justify-content-center text-center background-red\">\r\n            <Container className=\"my-5 py-4\">\r\n              <h3 className=\"text-white\">\r\n                \"Master your mindset <br />\r\n                and <br />\r\n                you'll master your body.\"\r\n              </h3>\r\n              <p className=\"text-white mb-5\">-GYMQUOTES.CO</p>\r\n              <h4 className=\"py-3 text-white\">Already a Member?</h4>\r\n              <AuthenticationButton />\r\n              <br />\r\n              <br />\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\" align-items-center justify-content-center text-center\">\r\n          <Col className=\"align-self-stretch background-red\">\r\n            <Container className=\"my-5 py-3\">\r\n              <h2 className=\"py-5 text-white\">\r\n                Whatever your fitness needs, <br />\r\n                we've got you covered. <br />\r\n                Ready to become a member?\r\n              </h2>\r\n              <AuthenticationButton />\r\n            </Container>\r\n          </Col>\r\n          <Col className=\"align-self-stretch background-dark\">\r\n            <Container className=\"my-5 py-3\">\r\n              <Container className=\"text-center\">\r\n                <h1 className=\"text-red\">Increase Your Stamina!</h1>\r\n                <AdCarousel\r\n                  className=\"adCarousel\"\r\n                  // Image Credit:  https://www.seattletimes.com/nation-world/will-you-go-back-to-the-gym-when-coronavirus-shutdown-ends-heres-what-you-need-to-consider/\r\n                  imgUrl1={bench}\r\n                  altText1=\"Man on weight bench\"\r\n                  carouselHeader1=\"Looking for personal training\r\n                  facilities\"\r\n                  carouselCaption1=\"to help you meet your fitness goals?\"\r\n                  // Image credit:  https://www.tampabay.com/news/health/2020/05/15/florida-gyms-reopen-monday-will-people-go/\r\n                  imgUrl2={equipmentRoom}\r\n                  altText2=\"Equipment Room\"\r\n                  carouselHeader2=\"Looking for a clean, comfortable\r\n                  atmosphere\"\r\n                  carouselCaption2=\"to work out and de-stress?\"\r\n                />\r\n              </Container>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\pages\\managerPage\\managerPage.js",["144","145","146"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"../../components/commonComponents/header/header\";\r\nimport Footer from \"../../components/commonComponents/footer/footer\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport UserInfoBox from \"../../components/commonComponents/userInfoBox/userInfoBox.js\";\r\nimport LeftColumn from \"../../components/managerComponents/managerInfoBoxColumns/mInfoBoxLeftCol\";\r\nimport RightColumn from \"../../components/managerComponents/managerInfoBoxColumns/mInfoBoxRightCol\";\r\nimport ManagerSchedule from \"../../components/managerComponents/managerSchedule/managerSchedule\"\r\nimport UserContext from \"../../utilities/userContext\";\r\nimport add from \"date-fns/add\";\r\nimport { format } from \"date-fns\";\r\n\r\n/*\r\nTop Area: \r\nManager Page\r\n\r\n\r\nRight Hand Column: \r\n3. Test that deleting a trainer also deletes their classes. \r\n\r\nSchedule \r\n1. Scheule pulls all classes \r\n2. Each class has a render button \r\n3. render button opens a modal  */\r\n\r\nfunction ManagerPage() {\r\n  //grab user from context \r\n  const user = useContext(UserContext);\r\n  //all existing trainers\r\n  const [allTrainers, setAllTrainers] = useState([]);\r\n\r\n  //holds info for a single trainer to display in trainer information\r\n  const [viewedTrainer, setViewedTrainer] = useState(\"placeHolder\");\r\n\r\n  //toggles the right column between trainer info and add trainer\r\n  const [toggleRightCol, setToggleRightCol] = useState(\"\");\r\n\r\n  //holds all info from add-trainer form\r\n  const [trainerHire, setTrainerHire] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    gender: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  //class Schedule Data \r\n  const [classSchedule, setClassSchedule] = useState()\r\n\r\n  //on page load...\r\n  useEffect(() => {\r\n    fetchallTrainers();\r\n    fetchScheduleData();\r\n  }, [user]);\r\n\r\n  //if i put this in fetchSchedule Data, it doesn't work. needs to be global. review this later. \r\n  const weekLength = [1,2,3,4,5,6,7]\r\n\r\n  //fetch all trainers and set them to the allTrainers state\r\n  function fetchallTrainers() {\r\n    fetch(\"/api/manager/trainers\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((trainerArray) => {\r\n        setAllTrainers(trainerArray);\r\n      });\r\n  }\r\n\r\n  //on View button click, set Chosen Trainer to  viewTrainer state\r\n  function handleViewedTrainer(e) {\r\n    const chosenTrainerId = e.target.id;\r\n\r\n    const chosenTrainer = allTrainers.filter((item) => {\r\n      return item._id === chosenTrainerId;\r\n    });\r\n\r\n    const chosenTrainerNoArray = chosenTrainer[0];\r\n\r\n    setViewedTrainer(chosenTrainerNoArray);\r\n    setToggleRightCol(\"viewTrainer\");\r\n  }\r\n\r\n  //on click, change right column to add-trainer render\r\n  function toggleAddTrainer() {\r\n    setToggleRightCol(\"addTrainer\");\r\n  }\r\n\r\n  //sets info from trainer hire form to state\r\n  const hireTrainerInfo = (e) => {\r\n    const { name, value } = e.target;\r\n    setTrainerHire({\r\n      ...trainerHire,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //post request to hire a new trainer\r\n  function handleHireNewTrainer() {\r\n    const dataObject = {\r\n      first_name: trainerHire.firstName,\r\n      last_name: trainerHire.lastName,\r\n      gender: trainerHire.gender,\r\n      phone: trainerHire.phone,\r\n      email: trainerHire.email,\r\n      role: \"employee\",\r\n    };\r\n    console.log(dataObject);\r\n    fetch(\"/api/manager/addEmployee\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(dataObject),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        fetchallTrainers();\r\n        setViewedTrainer({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          gender: \"M\",\r\n          email: \"\",\r\n          phone: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  //Delete request to terminate employee\r\n  function terminateTrainer() {\r\n    const id = viewedTrainer._id;\r\n    fetch(`/api/manager/deleteTrainer/` + id, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        fetchallTrainers();\r\n        setViewedTrainer({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          gender: \"M\",\r\n          email: \"\",\r\n          phone: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  /*---------------------------------------- Schedule Functions--------------------------------------------- */\r\n\r\n //fetches all the information needed to render a schedule and stores it in state.\r\n function fetchScheduleData() {\r\n\r\n fetch(\"/api/employee/6047aab647549b4658f9e131/classes\", {\r\n   method: \"GET\",\r\n   headers: {\r\n     \"Content-Type\": \"application/json\",\r\n     Accept: \"application/json\",\r\n   },\r\n })\r\n   .then((res) => res.json())\r\n   .then((res) => {\r\n    console.log(res)\r\n     const stateArray = [];\r\n     weekLength.map((nothing, i) => {\r\n       //Use date-fns to get classSchedule for the 7 days of the week\r\n       const addDay = add(new Date(), {\r\n         years: 0,\r\n         months: 0,\r\n         weeks: 0,\r\n         days: i,\r\n         hours: 0,\r\n         minutes: 0,\r\n         seconds: 0,\r\n       });\r\n\r\n       //the date written as Jan 23rd\r\n       const calendarDate = format(addDay, \"LLL, do\");\r\n       //day of week written as \"Monday\"\r\n       const dayOfWeek = format(addDay, \"EEEE\");\r\n\r\n       //Filter the fetch request to only grab classes on the current day weeklength.map is iterating through\r\n       const filteredData = res.filter((r) => {\r\n         return r.day === dayOfWeek;\r\n       });\r\n\r\n       //create an object to store both the fns date classSchedule and the current day\r\n       const dataObject = {\r\n         date: calendarDate,\r\n         weekDay: dayOfWeek,\r\n         classData: filteredData,\r\n       };\r\n\r\n       //add that object to state\r\n       stateArray.push(dataObject);\r\n     });\r\n     \r\n     setClassSchedule(stateArray);\r\n   });\r\n\r\n   console.log(classSchedule, 'class schedule')\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <UserInfoBox\r\n          colLeft={\r\n            <LeftColumn\r\n              allTrainers={allTrainers}\r\n              handleViewedTrainer={(e) => handleViewedTrainer(e)}\r\n              toggleAddTrainer={() => toggleAddTrainer()}\r\n            />\r\n          }\r\n          colRight={\r\n            <RightColumn\r\n              viewedTrainer={viewedTrainer}\r\n              toggleRightCol={toggleRightCol}\r\n              handleHireNewTrainer={() => handleHireNewTrainer()}\r\n              hireTrainerInfo={(e) => hireTrainerInfo(e)}\r\n              terminateTrainer={() => terminateTrainer()}\r\n            />\r\n          }\r\n        ></UserInfoBox>\r\n      </Container>\r\n       <ManagerSchedule classSchedule={classSchedule} />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManagerPage;\r\n","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\Forms\\RegistrationForm.js",["147","148"],"import { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./registrationForm.css\";\r\nimport UserContext from \"../../utilities/userContext\";\r\n\r\nexport default function RegistrationForm(props) {\r\n  return (\r\n    <>\r\n      <Container className=\"regForm background-white\">\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                <Form.Label column sm=\"2\">\r\n                  Email\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control plaintext readOnly value={props.user.email} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>First Name*</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"First name\"\r\n                  onChange={(event) => props.userInfo(event)}\r\n                  name=\"first_name\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Last Name*</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Last name\"\r\n                  onChange={(event) => props.userInfo(event)}\r\n                  name=\"last_name\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onClick={(event) => props.userInfo(event)}\r\n                  onKeyDown={(event) => props.userInfo(event)}\r\n                  name=\"gender\"\r\n                >\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"formBirthdate\">\r\n                <Form.Label>Birthdate</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  placeholder=\"Birthdate (yyyy-dd-mm)\"\r\n                  onChange={(event) => props.userInfo(event)}\r\n                  name=\"date_of_birth\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"formPhoneNumber\">\r\n                <Form.Label>\r\n                  Phone Number (ten digit number only, no parentheses / dashes\r\n                  please)\r\n                </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Phone Number\"\r\n                  pattern=\"[0-9]{10}\"\r\n                  onChange={(event) => props.userInfo(event)}\r\n                  name=\"phone\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\loginPageComponents\\AdCarousel.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\userInfoBox\\userInfoBox.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\footer\\footer.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\header\\header.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\devButton\\devButton.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\employeePageComponents\\employeeSchedule\\employeeSchedule.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\memberPageComponents\\meetYourTrainerBox\\TrainerCarousel.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\memberPageComponents\\memberInfoBox\\memberInfoBox.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\authenticationButton\\index.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\utilities\\convertTime.js",["149"],"import React from 'react'\r\n\r\n//changes timestamp to readable time.\r\n//https://stackoverflow.com/questions/13898423/javascript-convert-24-hour-time-of-day-string-to-12-hour-time-with-am-pm-and-no\r\nfunction convertTime(time) {\r\n    // Check correct time format and split into components\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [\r\n      time,\r\n    ];\r\n  \r\n    if (time.length > 1) {\r\n      // If time format correct\r\n      time = time.slice(1); // Remove full string match value\r\n      time[5] = +time[0] < 12 ? \"AM\" : \"PM\"; // Set AM/PM\r\n      time[0] = +time[0] % 12 || 12; // Adjust hours\r\n    }\r\n    //my added part to get rid of last two 00's (Ethan W)\r\n    time.splice(1, 3);\r\n    time.splice(2, 0, \" \");\r\n    // return adjusted time or original string\r\n    return time.join(\"\");\r\n  }\r\n\r\n  export default convertTime ","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\commonComponents\\scheduleColumn\\scheduleColumn.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\authenticationButton\\loginButton\\loginButton.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\authenticationButton\\logoutButton\\logoutButton.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\StoreComponent.js",["150","151"],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\employeePageComponents\\employeeInfoBoxColumns\\eInfoBoxRightColumn.js",["152"],"import React, { useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./styles.css\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport DevBtn from \"../../commonComponents/devButton/devButton\";\r\n\r\nfunction InfoBoxRightColumn(props) {\r\n  const [fitClassName, setFitClassName] = useState(\"\");\r\n  const [weekday, setWeekday] = useState(\"Monday\");\r\n  const [classTime, setClassTime] = useState(\"06:00:00:00\");\r\n  const [maxSize, setMaxSize] = useState(10);\r\n\r\n  // on Create Class click, create the new class, update the left col and schedule, then return to roster\r\n  function handleClassCreation() {\r\n    const classData = {\r\n      class_name: fitClassName,\r\n      day: weekday,\r\n      start_time: classTime,\r\n      trainer_id: props.trainerId,\r\n    };\r\n\r\n    fetch(\"/api/employee/addClass\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(classData),\r\n    })\r\n      .then((response) => response.text())\r\n      .then(() => {\r\n        props.fetchScheduleData();\r\n        props.fetchTrainerData();\r\n      });\r\n  }\r\n\r\n  //Ternery using toggleAddClass state in parent. Change Value in state to change right Col\r\n  return props.displayAddClass === \"roster\" ? (\r\n    <Card className=\"view-roster mb-5 mt-5\">\r\n      <Card.Body>\r\n        <Card.Title>Roster</Card.Title>\r\n        <Card.Text>\r\n          {/* receives an array of members as a prop and renders them as card text */}\r\n          {props.rosterList.map((item) =>\r\n            item.length === 0 ? (\r\n              <p>No one signed up yet!</p>\r\n            ) : (\r\n              <li className=\"list-item\" key={item}>\r\n                {item}{\" \"}\r\n              </li>\r\n            )\r\n          )}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  ) : (\r\n    <Card className=\"add-class mb-3 mt-3 pb-3\">\r\n      {\" \"}\r\n      <Card.Header>Add Class</Card.Header>\r\n      <Row>\r\n        <Col className=\"col-6\">\r\n          <Form.Group>\r\n            <p>Class Name</p>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Class Name\"\r\n              onChange={(e) => setFitClassName(e.target.value)}\r\n            />\r\n            <br />\r\n            <p>WeekDay</p>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setWeekday(e.target.value)}\r\n            >\r\n              <option>Monday</option>\r\n              <option>Tuesday</option>\r\n              <option>Wednesday</option>\r\n              <option>Thursday</option>\r\n              <option>Friday</option>\r\n              <option>Saturday</option>\r\n              <option>Sunday</option>\r\n            </Form.Control>\r\n            <br />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col className=\"col-6\">\r\n          <Form.Group>\r\n            <p>Max Class Size</p>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setMaxSize(e.target.value)}\r\n            >\r\n              <option>10</option>\r\n              <option>11</option>\r\n              <option>12</option>\r\n              <option>13</option>\r\n              <option>14</option>\r\n              <option>15</option>\r\n              <option>16</option>\r\n              <option>17</option>\r\n              <option>18</option>\r\n              <option>19</option>\r\n              <option>20</option>\r\n            </Form.Control>\r\n            <br />\r\n            <p>Class Start Time</p>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setClassTime(e.target.value)}\r\n            >\r\n              <option>06:00:00</option>\r\n              <option>07:00:00</option>\r\n              <option>08:00:00</option>\r\n              <option>09:00:00</option>\r\n              <option>10:00:00</option>\r\n              <option>11:00:00</option>\r\n              <option>12:00:00</option>\r\n              <option>13:00:00</option>\r\n              <option>14:00:00</option>\r\n              <option>15:00:00</option>\r\n              <option>16:00:00</option>\r\n              <option>17:00:00</option>\r\n              <option>18:00:00</option>\r\n            </Form.Control>\r\n            <br />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <DevBtn styleClass=\"btn-red\" onClick={handleClassCreation}>\r\n        Create Class\r\n      </DevBtn>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBoxRightColumn;\r\n","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\employeePageComponents\\employeeInfoBoxColumns\\einfoBoxLeftColumn.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\managerComponents\\managerSchedule\\managerSchedule.js",[],"C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\managerComponents\\managerInfoBoxColumns\\mInfoBoxRightCol.js",["153"],"import React, { useState } from \"react\";\r\nimport DevBtn from \"../../commonComponents/devButton/devButton\";\r\nimport \"./styles.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nfunction InfoBoxRightColumn(props) {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {props.toggleRightCol === \"addTrainer\" ? (\r\n        <Card className=\"trainer-info-card mt-4\">\r\n          <Card.Title className=\" trainer-info-title text-center mt-3\">\r\n            Hire New Trainer\r\n          </Card.Title>\r\n          <Card.Body>\r\n            <ListGroup className=\" hire-trainer-form\">\r\n              <Form.Group>\r\n                <ListGroup.Item className=\"rounded-top\">\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    onChange={(e) => props.hireTrainerInfo(e)}\r\n                    name=\"firstName\"\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    onChange={(e) => props.hireTrainerInfo(e)}\r\n                    name=\"lastName\"\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Form.Label>Gender</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => props.hireTrainerInfo(e)}\r\n                    name=\"gender\"\r\n                  >\r\n                    <option>M</option>\r\n                    <option>F</option>\r\n                  </Form.Control>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) => props.hireTrainerInfo(e)}\r\n                    name=\"email\"\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item className=\"trainerPhone rounded-bottom pb-3\">\r\n                  <Form.Label>Phone Number</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) => props.hireTrainerInfo(e)}\r\n                    name=\"phone\"\r\n                  />\r\n                </ListGroup.Item>\r\n              </Form.Group>\r\n            </ListGroup>\r\n            <div className=\"text-center\">\r\n              <DevBtn\r\n                styleClass=\"btn-dark\"\r\n                onClick={props.handleHireNewTrainer}\r\n              >\r\n                Hire Trainer\r\n              </DevBtn>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <Card className=\"trainer-info-card mt-4\">\r\n          <Card.Title className=\" trainer-info-title text-center mt-3\">\r\n            Trainer Information\r\n          </Card.Title>\r\n          <Card.Body>\r\n            <ListGroup className=\"list-group list-group-flush text-start rounded\">\r\n              <ListGroup.Item className=\"list-group-item trainerFirstName\">\r\n                First Name:{\" \"}\r\n                <span className=\"ml-1\">{props.viewedTrainer.first_name}</span>{\" \"}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"list-group-item trainerLastName\">\r\n                Last Name:{\" \"}\r\n                <span className=\"ml-1\">{props.viewedTrainer.last_name}</span>{\" \"}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"list-group-item trainerGender\">\r\n                Gender:\r\n                <span className=\"ml-1\">{props.viewedTrainer.gender}</span>{\" \"}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"list-group-item trainerEmail\">\r\n                Email Address:{\" \"}\r\n                <span className=\"ml-1\">{props.viewedTrainer.email}</span>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"list-group-item trainerPhone\">\r\n                Phone Number:\r\n                <span className=\"ml-1\">{props.viewedTrainer.phone} </span>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n\r\n            <div className=\"text-center mt-3 \">\r\n              <DevBtn styleClass=\"btn-dark\" onClick={props.terminateTrainer}>\r\n                Terminate Trainer\r\n              </DevBtn>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InfoBoxRightColumn;\r\n","C:\\Users\\sarah\\Documents\\Bootcamp\\bootcamp_homework\\Devfit\\client\\src\\components\\managerComponents\\managerInfoBoxColumns\\mInfoBoxLeftCol.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":8,"column":9,"nodeType":"160","messageId":"161","endLine":8,"endColumn":15},{"ruleId":"158","severity":1,"message":"162","line":9,"column":9,"nodeType":"160","messageId":"161","endLine":9,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":30,"column":6,"nodeType":"165","endLine":30,"endColumn":16,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":44,"column":37,"nodeType":"169","messageId":"170","endLine":44,"endColumn":39},{"ruleId":"158","severity":1,"message":"171","line":9,"column":10,"nodeType":"160","messageId":"161","endLine":9,"endColumn":19},{"ruleId":"158","severity":1,"message":"172","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":27},{"ruleId":"158","severity":1,"message":"173","line":1,"column":29,"nodeType":"160","messageId":"161","endLine":1,"endColumn":38},{"ruleId":"158","severity":1,"message":"174","line":1,"column":40,"nodeType":"160","messageId":"161","endLine":1,"endColumn":48},{"ruleId":"158","severity":1,"message":"175","line":14,"column":8,"nodeType":"160","messageId":"161","endLine":14,"endColumn":14},{"ruleId":"158","severity":1,"message":"176","line":15,"column":10,"nodeType":"160","messageId":"161","endLine":15,"endColumn":14},{"ruleId":"158","severity":1,"message":"177","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":11},{"ruleId":"163","severity":1,"message":"178","line":55,"column":6,"nodeType":"165","endLine":55,"endColumn":12,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"168","line":176,"column":34,"nodeType":"169","messageId":"170","endLine":176,"endColumn":36},{"ruleId":"158","severity":1,"message":"174","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":18},{"ruleId":"158","severity":1,"message":"180","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":19},{"ruleId":"158","severity":1,"message":"181","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"158","severity":1,"message":"172","line":1,"column":38,"nodeType":"160","messageId":"161","endLine":1,"endColumn":48},{"ruleId":"163","severity":1,"message":"182","line":42,"column":6,"nodeType":"165","endLine":42,"endColumn":12,"suggestions":"183"},{"ruleId":"158","severity":1,"message":"184","line":13,"column":10,"nodeType":"160","messageId":"161","endLine":13,"endColumn":17},{"ruleId":"158","severity":1,"message":"174","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'domain' is assigned a value but never used.","Identifier","unusedVar","'clientId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchScheduleData' and 'fetchTrainerData'. Either include them or remove the dependency array.","ArrayExpression",["187"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'propTypes' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'DevBtn' is defined but never used.","'Link' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchScheduleData'. Either include it or remove the dependency array.",["188"],"'UserContext' is defined but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'total'. Either include it or remove the dependency array.",["189"],"'maxSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [fetchScheduleData, fetchTrainerData, user._id]",{"range":"196","text":"197"},"Update the dependencies array to be: [fetchScheduleData, user]",{"range":"198","text":"199"},"Update the dependencies array to be: [cart, total]",{"range":"200","text":"201"},[1597,1607],"[fetchScheduleData, fetchTrainerData, user._id]",[1876,1882],"[fetchScheduleData, user]",[1144,1150],"[cart, total]"]